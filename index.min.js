let markdownBlock=[],markdownInline=[];const fs=require("fs");function registerBlock(e){markdownBlock.push(e)}function registerInline(e){markdownInline.push(e)}let cssStyles={h1:null,h2:null,h3:null,h4:null,h5:null,h6:null,p:"convertPara",hr:"convertHr",link:"convertLink",list:"convertli",ul:"convertul",ol:"convertol",table:"convertTable",image:"convertImage",code:"hljs",quote:"convertQuote",contInfo:"convertInfo",contWarning:"convertwarning",contDanger:"convertdanger",contSuccess:"convertsuccess",httprequest:"mdhttpRequest"};function getStyle(e){return cssStyles[e]||null}function updateStyle(e,n){return cssStyles[e]=n,cssStyles[e]}function convert(e){for(let n=0;n<markdownBlock.length;n++){let t=markdownBlock[n];for(;!1!==t(e);)e=t(e)}for(let r=0;r<markdownInline.length;r++){let l=markdownInline[r];for(;!1!==l(e);)e=l(e)}let o=(e=e.replace(/(?:\r\n|\r|\n)/g,"<br>")).split("<br>");for(let c=0;c<o.length;c++){let s=o[c];s.length>0&&!s.startsWith("<")&&(o[c]=`<p${getStyle("code")?` class="${getStyle("p")}"`:""}>${s}</p>`)}return e=o.join("<br>")}function render(e){return convert(e)}module.exports={convert,registerBlock,registerInline,getStyle,updateStyle,render};for(let i=0;i<fs.readdirSync(`${__dirname}/block`).length;i++){let e=fs.readdirSync(`${__dirname}/block`)[i];require(`./block/${e}`)}for(let i=0;i<fs.readdirSync(`${__dirname}/inline`).length;i++){let n=fs.readdirSync(`${__dirname}/inline`)[i];require(`./inline/${n}`)}