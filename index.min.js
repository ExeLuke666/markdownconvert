let markdownBlock=[],markdownInline=[];const fs=require("fs");function registerBlock(e){markdownBlock.push(e)}function registerInline(e){markdownInline.push(e)}let cssStyles={h1:null,h2:null,h3:null,h4:null,h5:null,h6:null,p:"convertPara",hr:"convertHr",link:"convertLink",list:"convertli",ul:"convertul",ol:"convertol",table:"convertTable",image:"convertImage",code:"hljs",quote:"convertQuote",contInfo:"convertinfo",contWarning:"convertwarning",contDanger:"convertdanger",contSuccess:"convertsuccess",httprequest:"mdhttpRequest"};function getStyle(e){return cssStyles[e]||null}function updateStyle(e,n){return cssStyles[e]=n,cssStyles[e]}function convert(e){e=`
${e.replaceAll("\r","")}

`;for(let n=0;n<markdownBlock.length;n++){let l=markdownBlock[n];for(;!1!==l(e);)e=l(e)}for(let t=0;t<markdownInline.length;t++){let r=markdownInline[t];for(;!1!==r(e);)e=r(e)}for(let c of(e=e.replace(/(?:\n\n|\n)/g,"<br>"),Object.keys(module.exports.cache)))e.includes(c)&&(e=e.replace(c,module.exports.cache[c]),delete module.exports.cache[c]);let o=e.split("<br>");for(let s=0;s<o.length;s++){let a=o[s];!(a.includes("<hr")||a.includes("<br")||a.includes("<table")||a.includes("<img"))&&!a.includes("<ol")&&a.length>0&&(o[s]=`<p${getStyle("p")?` class="${getStyle("p")}"`:""}>${a}</p>`)}return e=(e=o.join("<br>")).replaceAll("<br><p","<p").replaceAll("</p><br>","</p>")}function render(e){return convert(e)}function updateCache(e){module.exports.cache=e}module.exports={convert,registerBlock,registerInline,getStyle,updateStyle,render,cache:{},updateCache};for(let i=0;i<fs.readdirSync(`${__dirname}/block`).length;i++){let e=fs.readdirSync(`${__dirname}/block`)[i];require(`./block/${e}`)}for(let i=0;i<fs.readdirSync(`${__dirname}/inline`).length;i++){let n=fs.readdirSync(`${__dirname}/inline`)[i];require(`./inline/${n}`)}